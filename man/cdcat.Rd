% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/cdcat.R
\name{cdcat}
\alias{cdcat}
\title{Cognitively based computerized adaptive test application}
\usage{
cdcat(GDINA.obj, dat = NULL, MAXJ = 20, FIXED.LENGTH = TRUE,
  att.prior = NULL, post.initial = NULL, max.cut = 0.8,
  i.print = 250, ...)
}
\arguments{
\item{GDINA.obj}{Calibrated item bank.}

\item{dat}{Dataset to be analyzed (if is.null(dat) then dat <- GDINA.obj$options$dat) (i.e., post-hoc CD-CAT simulation).}

\item{MAXJ}{Maximum number of items to be applied. Default is 20.}

\item{FIXED.LENGTH}{Fixed CAT-legnth (TRUE) or fixed-precision (FALSE). Default is TRUE.}

\item{att.prior}{Prior distribution for MAP/EAP estimates.}

\item{post.initial}{Prior distribution for GDI.}

\item{max.cut}{Cutoff for fixed-precision (posterior pattern > max.cut). Default is .80.}

\item{i.print}{Print examinee information. Default is 250.}
}
\value{
\code{cdcat} returns an object of class \code{cdcat}.
}
\description{
\code{cdcat} conducts a CD-CAT application for a given dataset. Items are selected according to the general discrimination
index (GDI; de la Torre & Chiu, 2016; Kaplan, de la Torre, & Barrada, 2016). The next item to be selected by the adaptive algorithm is
the one with the highest GDI.
}
\examples{
####################################
#        Example 1.                #
#     CD-CAT simulation for a      #
#     GDINA obj                    #
####################################

#--------Data generation --------#
Q <- sim180GDINA$simQ
K <- ncol(Q)
dat <- sim180GDINA$simdat
att <- sim180GDINA$simalpha

#--------Model estimation --------#
fit <- GDINA(dat = dat, Q = Q, verbose = 0)

#--------CD-CAT --------#
res.FIXJ <- cdcat(dat = fit$options$dat,
                 GDINA.obj = fit,
                 FIXED.LENGTH = TRUE)
res.VARJ <- cdcat(dat = fit$options$dat,
                 GDINA.obj = fit,
                 FIXED.LENGTH = FALSE)

#--------Results --------#
res.FIXJ$est[[1]] # estimates for the first examinee (fixed-length)
res.VARJ$est[[1]] # estimates for the first examinee (fixed-precision)
att.plot(res.FIXJ, i = 1) # plot for estimates for the first examinee (fixed-length)
att.plot(res.VARJ, i = 1) # plot for estimates for the first examinee (fixed-length)
# FIXJ summary
res.FIXJ.sum.real <- cdcat.summary(cdcat.obj = res.FIXJ,
                                  alpha = att) # vs. real accuracy
res.FIXJ.sum.real$recovery$plotPCV
res.FIXJ.sum.real$recovery$plotPCA
# VARJ summary
res.VARJ.sum.post <- cdcat.summary(cdcat.obj = res.VARJ, alpha = att)
res.VARJ.sum.post$CATlength$stats
res.VARJ.sum.post$CATlength$plot
res.VARJ.sum.post$recovery
# Post-hoc CAT simulation (only if dat is fit$options$dat)
att.J <- personparm(fit, "MAP")[, -(K+1)]
class.J <- ClassRate(att, att.J) # upper-limit for accuracy
res.FIXJ.sum.post <- cdcat.summary(cdcat.obj = res.FIXJ, alpha = att.J)
res.FIXJ.sum.post$recovery$plotPCV + geom_hline(yintercept = class.J$PCV[K], color = "red")
res.FIXJ.sum.post$recovery$plotPCA + geom_hline(yintercept = class.J$PCA, color = "red")

####################################
# Example 2. #
# CD-CAT simulation for #
# multiple GDINA objs and #
# comparison of performance on a
# validation sample #
####################################

#--------Data --------#
Q <- sim155complex$simQ
K <- ncol(Q)
parm <- sim155complex$simcatprob.parm
dat.c <- sim155complex$simdat.c
att.c <- sim155complex$simalpha.c
dat.v <- sim155complex$simdat.v
att.v <- sim155complex$simalpha.v

#--------(multiple) Model estimation --------#
fitTRUE <- GDINA(dat = dat.c, Q = Q, catprob.parm = parm, control = list(maxitr = 0), verbose = 0)
fitGDINA <- GDINA(dat = dat.c, Q = Q, verbose = 0)
fitDINA <- GDINA(dat = dat.c, Q = Q, model = "DINA", verbose = 0)
fitDINO <- GDINA(dat = dat.c, Q = Q, model = "DINO", verbose = 0)
fitACDM <- GDINA(dat = dat.c, Q = Q, model = "ACDM", verbose = 0)
LR2 <- modelcomp(GDINA.obj = fitGDINA, method = "LR",
                LR.args = list(LR.approx = TRUE), models = c("DINA", "DINO","ACDM"))
alpha.level <- 0.05
model <- apply(LR2$pvalues, 1, function(x) {
 if (max(x, na.rm = TRUE) > alpha.level/(sum(rowSums(Q)>1)*3)) {
   which.max(x)}
 else {
   return(0)}})
models <- rep(0, nrow(Q))
models[which(rowSums(Q) != 1)] <- model
models <- models
fitLR2 <- GDINA(dat = dat.c, Q = Q, model = models, verbose = 0)

#--------CD-CAT --------#
fit.l <- list(fitTRUE, fitGDINA, fitDINA, fitDINO, fitACDM, fitLR2)
res.FIXJ.l <- res.VARJ.l <- list()
for(mm in 1:length(fit.l)) {
 fit <- fit.l[[mm]]
 res.FIXJ.l[[mm]] <- cdcat(dat = dat.v,
                           GDINA.obj = fit,
                         FIXED.LENGTH = TRUE)
 res.VARJ.l[[mm]] <- cdcat(dat = dat.v,
                         GDINA.obj = fit,
                           FIXED.LENGTH = FALSE)
}

#--------Results --------#
fitbest <- GDINA(dat = dat.v, Q = Q, catprob.parm = parm, control = list(maxitr = 1), verbose = 0)
fitbest.acc <- personparm(fitbest, "MAP")[, -(K+1)]
class.J <- ClassRate(att.v, fitbest.acc) # upper-limit for accuracy
# FIXJ comparison
res.FIXJ.sum.post.comp <- cdcat.comp(cdcat.obj.l = res.FIXJ.l, alpha = att.v)
res.FIXJ.sum.post.comp$PCVcomp + geom_hline(yintercept = class.J$PCV[K], color = "red")
res.FIXJ.sum.post.comp$PCAmcomp + geom_hline(yintercept = class.J$PCA, color = "red")
# VARJ comparison
res.VARJ.sum.post.comp <- cdcat.comp(cdcat.obj.l = res.VARJ.l, alpha = att.v)
res.VARJ.sum.post.comp$stats
res.VARJ.sum.post.comp$plots
res.VARJ.sum.post.comp$recovery

}
\references{
de la Torre, J., & Chiu, C. Y. (2016). General Method of Empirical Q-matrix Validation. \emph{Psychometrika, 81}, 253-273.

Kaplan, M., de la Torre, J., & Barrada, J. R. (2015). New item selection methods for cognitive diagnosis computerized adaptive testing. \emph{Applied Psychological Measurement, 39}, 167-188.
}
